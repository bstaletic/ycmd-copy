language: generic
dist: trusty
sudo: true
before_install:
  - git submodule update --init --recursive
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
install:
  # source because it sets up env vars on some platforms
  - source ci/travis/travis_install.sh
script:
  - ci/travis/travis_script.sh
after_success:
  - if [ "${COVERAGE}" == "true" ]; then bash <(curl -s https://codecov.io/bash); fi
env:
  global:
    # Travis can run out of RAM, so we need to be careful here.
    - YCM_CORES=3
    - COVERAGE=true
    - USE_CLANG_COMPLETER=true
   - secure: "EdngcNPAJqUMc+NOL5/IhJqLQJclWlm8bB67NnqS+ARGyZzLBx/4sAp81trx/seZdtd3sb7Kc9awOtZHhwY5u1ZCHonuwe5MiIfJudi4V5C4/hX/T5L7c3Nv0pkq23+W/1f8x3D1iRswbbfYCsd0KF2bANKpzS0WaMTLVmE1oNKlTS5tmI9pgV0Eea3Qk2iog0WEKgfgftwTziyNDA2lC2TUv9qOBgjWglTWJ0gce4qmD2HXqPsgJOn07qVBj5YYt/42bLV1n8I6odYhuSFunqL8yiDigvOooBx5IhWLFJbJNXoBU8JnXeKyWtc1adv/YARLd0em8mSOzXOt5LQ229aNu7yeCLVkNm5rTzNdnHFm8YFkIv4vUzBCU8hVjBu5b2S9LNy04yF6G9/SlKga+CKrz3dSRSTHiIP3KG30jSTEVhDLVcGAAPfAkQnKvhX0n1jEMu8opjphsQVoWeV+k55nuWQCr3CMxwmZ3YLxUfqQqQ9gplNuxilpsS4icVXMtJtU6naZcA5D14J+gi4D1q1n2ouGbpd/rlDb9sMUMDqO7sNegOSbeVsehfO9pFKoZOu7EzXtj9xYHahoThS41lKFqGoE3qN8fiGFKEPfdYCI9VwHkTcpEupSAdEpe0SjYbTWaSNmU5NZbyPNgSDuuMfEMkzqFOOGj289CGp/6qU="
  matrix:
    - YCMD_PYTHON_VERSION=2.7 USE_CLANG_COMPLETER=false
    - YCMD_PYTHON_VERSION=2.7
    - YCMD_PYTHON_VERSION=3.4
    - YCMD_PYTHON_VERSION=3.4 YCM_COMPILER=clang
    - YCMD_PYTHON_VERSION=3.4 YCM_BENCHMARK=true COVERAGE=false
    - YCMD_PYTHON_VERSION=3.4 YCM_CLANG_TIDY=true COVERAGE=false YCM_CORES=1
addons:
  # If this doesn't make much sense to you, see the travis docs:
  #    https://docs.travis-ci.com/user/migrating-from-legacy/
  apt:
    sources:
     # The Travis apt source whitelist can be found here:
     #   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
     - ubuntu-toolchain-r-test  # for new libstdc++
     - george-edison55-precise-backports # for a more recent version of cmake (3.2.3)
     - mono # for installing Mono
    packages:
     - cmake-data
     - cmake
     # 4.8 is the first version of GCC with good enough C++11 support.
     - g++-4.8
     # Install Clang 3.4 and its standard library.
     - clang
     - clang-tidy-3.9
     - libc++-dev
     # Required to build the OmniSharp server.
     - mono-devel
     # Everything below is a Python build dep (though it depends on Python
     # version). We need them because pyenv builds Python.
     - libssl-dev
     - zlib1g-dev
     - libbz2-dev
     - libreadline-dev
     - libsqlite3-dev
     - wget
     - curl
     - llvm
     - libncurses5-dev
     - libncursesw5-dev
  coverity_scan:
    project:
      name: "bstaletic/ycmd-copy"
      description: "<Your project description here>"
    notification_email: boris.staletic@gmail.com
    build_command_prepend: "cmake -DUSE_CLANG_COMPLETER=ON cpp"
    build_command: "make -j3"
    branch_pattern: coverity_scan
cache:
  directories:
    - $HOME/.cache/pip  # Python packages from pip
    - $HOME/.npm  # Node packages from npm
    - $HOME/.cargo  # Cargo package deps
    - $HOME/.pyenv  # pyenv
    - $TRAVIS_BUILD_DIR/clang_archives  # Clang downloads
    - $TRAVIS_BUILD_DIR/third_party/racerd/target  # Racerd compilation
      # jdt.ls download
    - $TRAVIS_BUILD_DIR/third_party/eclipse.jdt.ls/target/cache

